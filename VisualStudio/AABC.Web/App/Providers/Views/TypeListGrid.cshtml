
@model AABC.Web.Models.Providers.ProviderTypesListVM

@Html.DevExpress().GridView(
    s => {
        s.Name = "gridList";
        s.KeyFieldName = "ID";

        s.Settings.ShowTitlePanel = true;
        s.SetTitlePanelTemplateContent(
            c => {
                Html.RenderPartial("GridTitlePane", Model.ListBase.GridTitlePanelSettings);
            });

        s.Width = Unit.Percentage(100);
        s.Height = Unit.Percentage(100);
        s.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;
        s.ClientSideEvents.Init = "function(s, e) { App.Content.GridViews.InitializeForStretchHeight(s); }";
        s.ClientSideEvents.EndCallback = "function(s, e) { App.Content.GridViews.StretchHeight(s); }";

        s.SettingsPager.PageSize = 30;
        s.SettingsPager.AlwaysShowPager = true;
        s.SettingsPager.Visible = true;

        s.SettingsBehavior.AllowSort = true;
        s.SettingsBehavior.AllowGroup = false;
        s.SettingsBehavior.AllowFocusedRow = true;
        s.SettingsBehavior.AllowSelectByRowClick = true;
        s.SettingsBehavior.AllowSelectSingleRowOnly = true;
        s.SettingsBehavior.AllowDragDrop = false;
        s.SettingsLoadingPanel.Mode = GridViewLoadingPanelMode.Disabled;

        s.Settings.ShowFilterRow = true;
        s.CallbackRouteValues = new { Controller = "Providers", Action = "TypeSearchGridFilter" };
        s.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['filter'] = '" + Model.ListBase.CallbackFilterValue + "'; e.customArgs['isFilterCallback'] = 'true'; }";


        s.Columns.Add(column => {
            column.Settings.AllowAutoFilter = DefaultBoolean.False;

            column.Caption = "Actions";
            column.UnboundType = DevExpress.Data.UnboundColumnType.String;
            column.Width = 52;
            column.SetDataItemTemplateContent(c => {

                string itemID = DataBinder.Eval(c.DataItem, "ID").ToString();

                string button = Html.DevExpress().Button(
                    b => {
                        b.Images.Image.Url = "~/Content/Images/actionlist-med-light-16.png";
                        b.Name = "pmButton" + itemID;
                        b.Text = "";
                        b.ControlStyle.CssClass = "action-button";
                    }).GetHtml().ToHtmlString();

                string popup = @Html.DevExpress().PopupMenu(
                    menu => {
                        menu.Name = "pmActions" + itemID;
                        menu.PopupElementID = "pmButton" + itemID;

                        menu.ClientSideEvents.ItemClick = "actionMenuItemClick";
                        menu.PopupAction = PopupAction.LeftMouseClick;

                        menu.Items.Add(i => {
                            i.Text = "View/Edit";
                            i.Name = "Edit";
                            i.Image.IconID = "actions_edit_16x16devav";
                        });

                        menu.Items.Add(i => {
                            i.Text = "Delete";
                            i.Name = "Delete";
                            i.Image.IconID = "edit_delete_16x16office2013";
                            i.BeginGroup = true;
                        });
                    }
                ).GetHtml().ToHtmlString();

                ViewContext.Writer.Write(button + popup);

            });
        });


        var col = s.Columns.Add("colCode");
        col.Width = 50;
        col.FieldName = "Code";
        col.Caption = "Code";
        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        col.CellStyle.HorizontalAlign = HorizontalAlign.Center;

        col = s.Columns.Add("colIsOutsourced");
        col.FieldName = "IsOutsourced";
        col.Caption = "Outsourced?";
        col.Width = 100;
        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        col.ColumnType = MVCxGridViewColumnType.CheckBox;

        col = s.Columns.Add("colCanSupervise");
        col.FieldName = "CanSuperviseCase";
        col.Caption = "Can Supervise?";
        col.Width = 100;
        col.ColumnType = MVCxGridViewColumnType.CheckBox;

        col = s.Columns.Add("colName");
        //col.Width = 100;
        col.FieldName = "Name";
        col.Caption = "Name";
        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;

        col = s.Columns.Add("colAssociations");
        //col.Width = 100;
        col.FieldName = "AssociatedProvidersCount";
        col.Caption = "Associated Providers";
        col.Width = 150;
        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        col.CellStyle.HorizontalAlign = HorizontalAlign.Center;


    }
).Bind(Model.DetailList).GetHtml()
