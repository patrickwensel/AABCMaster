@model AABC.Web.Models.Providers.ProvidersListVM
<script id="provider-details-template" type="text/x-handlebars-template">
    <table>
        <tr>
            <th align="left" width="120" valign="top">Name</th>
            <td valign="top">{{name}} ({{type}})</td>
        </tr>
        <tr>
            <th align="left" width="120" valign="top">Address</th>
            <td valign="top">
                {{#address}}{{address}}<br />{{/address}}
                {{#address2}}{{address2}}<br />{{/address2}}
                {{#zipCode}}({{zipCode}}){{/zipCode}}{{#city}}{{#zipCode}} {{/zipCode}}{{city}}{{/city}}{{#state}}{{#city}}, {{/city}}{{state}}{{/state}}
            </td>
        </tr>
        {{#phone}}
        <tr>
            <th align="left" width="120" valign="top">Phone</th>
            <td valign="top">{{phone}}</td>
        </tr>
        {{/phone}}
        {{#email}}
        <tr>
            <th align="left" width="120" valign="top">Email</th>
            <td valign="top"><a href="mailto:{{email}}">{{email}}</a></td>
        </tr>
        {{/email}}
        <tr>
            <th align="left" width="120" valign="top">Service Areas</th>
            <td valign="top">{{serviceAreas}}</td>
        </tr>

        <tr>
            <th align="left" width="120" valign="top">Service Zip Codes</th>
            <td valign="top">
                {{#serviceZipCodes}}
                <span>{{.}}</span>,
                {{/serviceZipCodes}}
            </td>
        </tr>
        {{#insuranceCredentials}}
        <tr>
            <th align="left" width="120" valign="top">Insurance Credentials</th>
            <td valign="top">
                {{^isActive}}<strike>
    {{/isActive}}
    {{insuranceName}} ({{#formatDate}}{{startDate}}{{/formatDate}} <->
        {{#formatDate}}{{endDate}}{{/formatDate}})
        {{^isActive}}
</strike>{{/isActive}}
            </td>
        </tr>
        {{/insuranceCredentials}}
    </table>
</script>
<script type="text/javascript">
    var template;
    $(function () {
        template = $("#provider-details-template").html();
        Mustache.parse(template);   // optional, speeds up future uses
    })

    var DialogConfirmResult = null;
    var activeModelID = null;
    function showMore(element, event) {
        event.preventDefault();
        var $element = $(element);
        var itemID = $element.attr("itemID");
        $.getJSON("/Providers/GetDetails", { providerID: itemID }).done(function (data) {
            data.formatDate = function () {
                return function (text, render) {
                    var d = render(text);
                    var m = moment(d);
                    var f = m.isValid() ? m.format("MM/DD/YYYY") : "";
                    return f;
                };
            };
            var rendered = Mustache.render(template, data);
            popup.SetContentHTML(rendered);
            popup.ShowAtElement($element.parent()[0]);
        });
        return false;
    }

    function DialogConfirmClosed() {
        if (DialogConfirmResult == 'button1') {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "Providers")',
                data: { id: activeModelID },
                success: function (response) {
                    $("#" + App.Content.ContentElementID).empty().append(response);
                    App.Dialogs.MessageBox("Delete successful", App.Dialogs.Icons.Ok);
                },
                error: function () {
                    App.Dialogs.Error("We're sorry, but we seem to have run into an issue trying to delete this referral.");
                }
            });
        }
    }

    function actionMenuItemClick(s, e) {
        var id = s.name.replace('pmActions', '');
        var action = e.item.name;

        switch (action) {
            case "Edit":
                LoadingPanel.Show();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("Edit", "Providers")',
                    data: { id: id },
                    success: function (response) {
                        $("#" + App.Content.ContentElementID).empty().append(response);
                        LoadingPanel.Hide();
                    },
                    error: function () {
                        LoadingPanel.Hide();
                        App.Dialogs.Error("We're sorry, but we couldn't seem to load the Edit form for this provider.");
                    }
                });
                break;
            case "Delete":
                var msg = "Are you sure you want to delete this Provider?";
                $.ajax({
                    type: 'GET',
                    url: '/Dialogs/ConfirmDelete',
                    data: { contentElementID: App.Content.ContentElementID, message: msg },
                    success: function (r) {
                        $("#DialogConfirmAnchor").html(r);
                        activeModelID = id;
                        DialogConfirm.Show();
                    },
                    error: function() {
                        App.Dialogs.Error("We're sorry, but we seem to have run into an issue trying to confirm this action.");
                    }
                });
                break;
            default:
                App.Dialogs.Error("Action not recognized.  Please contact your administrator.");
        }
    }
</script>

<div id="grid-list-new">@Html.Partial("ListGrid", Model)</div>

@Html.DevExpress().PopupControl(p => {
    p.Name = "popup";
    p.EnableClientSideAPI = true;
    p.PopupHorizontalAlign = PopupHorizontalAlign.OutsideRight;
    p.PopupVerticalAlign = PopupVerticalAlign.Below;
    p.HeaderText = "Provider Details";
    p.MinWidth = Unit.Pixel(500);
    p.MaxWidth = Unit.Pixel(500);
}).GetHtml()
<div id="DialogConfirmAnchor"></div>

<script type="text/javascript">

    $(function() {
        App.NavBar.InitView(@Html.Raw(Json.Encode(Model.Base)));
    });
</script>