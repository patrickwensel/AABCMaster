@model AABC.Web.Models.Cases.TimeBillVM



<script type="text/javascript" id="dxss_CaseTimeBillViewModelScripts">

    $.getScript('/Scripts/Pages/CaseManageTimeBill.js', function () {
        initComponent(@ViewBag.CaseID);
        App.NavBar.InitView(@Html.Raw(Json.Encode(Model.Base)));
    });

</script>


<div class="case-patient-headerlink">
    @Html.DevExpress().HyperLink(
        s => {
            s.NavigateUrl = "/Patients/Edit/" + ViewBag.CaseID;
            s.Properties.Text = Model.PatientName + (!string.IsNullOrEmpty(Model.PatientGender) ? " (" + Model.PatientGender + ")" : string.Empty);
        }
    ).GetHtml()

    @{Html.RenderAction("CaseHighRiskLabel", "Patients", new { CaseId = ViewBag.CaseID });}
</div>


<div id="CaseManageTimeBillCaseID" style="display: none;">@ViewBag.CaseID</div>

<table style="width: 100%;">
    <tr>
        <td>
            <div style="width: 350px;">
                <p>
                    <span style="font-weight: 600;">Statuses:</span><br />
                    <span style="width: 25px;">E:</span><span>Entered by Provider (they've finalized)</span><br />
                    <span style="width: 25px;">F:</span><span>Finalized</span><br />
                </p>
            </div>
        </td>
        <td valign="bottom" style="width: 100%;">
            <div style="float: right; margin-bottom: 10px;">
                <table>
                    <tr>
                        <td>
                            @Html.DevExpress().Button(
                                s => {
                                    s.Name = "btnShowAddHoursPopup";
                                    s.Text = "Add Hours";
                                    s.ClientSideEvents.Click = "function(s, e) { window.aabc.showHoursEntry(null); }";
                                }
                            ).GetHtml()
                        </td>
                        @*<td style="padding-left: 5px;">
                            @Html.DevExpress().Button(
                                s => {
                                    s.Name = "btnShowHapPopup";
                                    s.Text = "Auto-Populate";
                                    s.ClientSideEvents.Click = "function(s, e) { App.DevEx.GetControl('hapPopup').Show(); }";
                                }
                            ).GetHtml()
                        </td>*@
                        <td style="padding-left: 5px;">
                            @Html.DevExpress().Button(
                                s => {
                                    s.Name = "btnDcpUnfinalizeHours";
                                    s.Text = "De-finalize Provider";
                                    s.ClientSideEvents.Click = "function(s, e) { DefinalizeProvider.ShowPopup(); }";
                                }
                            ).GetHtml()
                        </td>
                    </tr>
                </table>
                
            </div>
        </td>
    </tr>
</table>

<div id="ManageTimeBillGridContainer">@Html.Partial("ManageTimeBillGrid", Model.GridItems)</div>
<div id="auth-resolution-details-modal">
    @Html.DevExpress().PopupControl(
        s =>
        {
            s.Name = "auth-resolution-details-modal";
            s.Width = 600;
            s.Height = 375;
            s.AllowDragging = true;
            s.SetContent(() =>
            {
                Html.RenderPartial("ManageTimeBillAuthResolutionDetailsPopup");
            });
            s.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
            s.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
            s.HeaderText = "Authorization Resolution Details";
            s.Modal = true;
        }
    ).GetHtml()
</div>

<div id="HoursAutoPopulatePopupAnchor">

    @Html.DevExpress().PopupControl(
        s => {
            s.Name = "hapPopup";
            s.Width = 600;
            s.Height = 375;
            s.AllowDragging = true;
            s.SetContent(() => {
                Html.RenderPartial("ManageTimeBillAutoPopulatePopup", new AABC.Web.Models.Cases.TimeBillAutoPopulateVM());
            });
            s.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
            s.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
            s.HeaderText = "Auto-Populate via Template";
            s.Modal = true;
        }
    ).GetHtml()

</div>

<div id="DefinalizeProviderPopupAnchor">

    @Html.DevExpress().PopupControl(
        s => {
            s.Name = "dcpPopup";
            s.Width = 320;
            s.Height = 150;
            s.AllowDragging = true;
            s.SetContent(() => {
                Html.RenderPartial("ManageTimeBillDefinalizeProviderPopup", new AABC.Web.Models.Cases.TimeBillDefinalizeProvider());
            });
            s.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
            s.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
            s.HeaderText = "De-finalize Provider";
            s.Modal = true;
        }
    ).GetHtml()

</div>

<div id="DownloadHoursReportsPopupAnchor">

    @Html.DevExpress().PopupControl(
        s => {
            s.Name = "DownloadHoursReportsPopup";
            s.Width = 700;
            s.Height = 350;
            s.AllowDragging = true;
            s.SetContent(() => {
                Html.RenderPartial("ManageTimeBillDownloadHoursReportsPopup");
            });
            s.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
            s.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
            s.HeaderText = "Download Hours Reports";
            s.Modal = true;
        }
    ).GetHtml()

</div>



@*<script id="dxss_CaseTimeBillAutoPopKickoff" type="text/javascript">window.setTimeout(function() { AutoPop.Initialize(); }, 250);</script>*@
