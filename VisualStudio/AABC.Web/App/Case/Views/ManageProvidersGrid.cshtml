@model IEnumerable<AABC.Web.Models.Cases.CaseProviderListItem>

@Html.DevExpress().GridView(settings => {
    settings.Name = "gvProviders";
    settings.KeyFieldName = "ID";
    settings.Width = Unit.Percentage(100);
    settings.SettingsBehavior.AllowSort = false;
    settings.SettingsBehavior.AllowGroup = false;
    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.SettingsBehavior.AllowSelectByRowClick = true;
    settings.SettingsBehavior.AllowSelectSingleRowOnly = true;
    settings.SettingsBehavior.AllowDragDrop = false;

    settings.CallbackRouteValues = new { Controller = "Case", Action = "ProviderGridCallback" };
    //settings.ClientSideEvents.ContextMenu = "gvProvidersShowContentMenu";
    settings.ClientSideEvents.BeginCallback = "function (s, e) { e.customArgs['caseID'] = window.CASEID; }";

    settings.HtmlDataCellPrepared = (sender, e) => {
        e.Cell.Attributes.Add("data-dym-cellClick", "gvProviders");
        e.Cell.Attributes.Add("data-dym-visibleIndex", e.VisibleIndex.ToString());
        e.Cell.Attributes.Add("data-dym-fieldName", e.DataColumn.FieldName);
    };

    settings.Columns.Add(col =>
    {
        col.Name = "Active";
        col.FieldName = "Active";
        col.Width = 35;
        col.ColumnType = MVCxGridViewColumnType.CheckBox;
        col.EditCellStyle.HorizontalAlign = HorizontalAlign.Center;
        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

    settings.Columns.Add(col =>
    {
        col.Name = "Type";
        col.FieldName = "Type";
        col.Width = 75;
        col.ReadOnly = true;
        col.EditFormSettings.Visible = DefaultBoolean.False;
        col.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

    settings.Columns.Add(col => {
        col.Name = "CommonName";
        col.Caption = "Provider Name";
        col.SetDataItemTemplateContent(c => {
            Html.DevExpress().HyperLink(hl => {
                var id = DataBinder.Eval(c.DataItem, "ProviderID");
                hl.Properties.Text = DataBinder.Eval(c.DataItem, "Name").ToString();
                hl.Name = "ProviderLink_" + c.KeyValue.ToString();
                hl.NavigateUrl = "/Providers/Edit/" + id.ToString();
            }).Render();
        });
    });

    settings.Columns.Add(col =>
    {
        col.Name = "StartDate";
        col.FieldName = "StartDate";
        col.Width = 85;
        col.PropertiesEdit.DisplayFormatString = "d";
        col.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

    settings.Columns.Add(col =>
    {
        col.Name = "EndDate";
        col.FieldName = "EndDate";
        col.Width = 85;
        col.PropertiesEdit.DisplayFormatString = "d";
        col.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

    settings.Columns.Add(col =>
    {
        col.Name = "Email";
        col.FieldName = "Email";
        col.Width = 150;
        col.ReadOnly = true;
        col.EditFormSettings.Visible = DefaultBoolean.False;
        col.ColumnType = MVCxGridViewColumnType.HyperLink;
        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        var prop = col.PropertiesEdit as HyperLinkProperties;
        prop.NavigateUrlFormatString = "mailto:{0}";
        prop.TextField = "Email";
    });

    settings.Columns.Add(col =>
    {
        col.Name = "Phone";
        col.FieldName = "Phone";
        col.Width = 100;
        col.ReadOnly = true;
        col.EditFormSettings.Visible = DefaultBoolean.False;
        col.CellStyle.HorizontalAlign = HorizontalAlign.Center;
        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

    settings.Columns.Add(col =>
    {
        col.Name = "IsSupervisor";
        col.FieldName = "IsSupervisor";
        col.Caption = "Supervisor";
        col.Width = 50;
        col.ColumnType = MVCxGridViewColumnType.CheckBox;
        col.EditCellStyle.HorizontalAlign = HorizontalAlign.Center;
        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

    settings.Columns.Add(col =>
    {
        col.Name = "IsAssessor";
        col.FieldName = "IsAssessor";
        col.Caption = "Assessor";
        col.Width = 50;
        col.ColumnType = MVCxGridViewColumnType.CheckBox;
        col.EditCellStyle.HorizontalAlign = HorizontalAlign.Center;
        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

    settings.Columns.Add(col =>
    {
        col.Name = "IsAuthorizedBCBA";
        col.FieldName = "IsAuthorizedBCBA";
        col.Caption = "Insurance<br />Auth'd BCBA";
        col.Width = 75;
        col.ColumnType = MVCxGridViewColumnType.CheckBox;
        col.EditCellStyle.HorizontalAlign = HorizontalAlign.Center;
        col.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });

}).Bind(Model).GetHtml()
