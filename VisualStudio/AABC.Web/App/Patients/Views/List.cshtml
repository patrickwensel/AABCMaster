@model AABC.Web.Models.Patients.PatientsListVM<AABC.Web.App.Patients.Models.PatientsListItem2VM>

<script type="text/javascript">

    var DialogConfirmResult = null;
    var activeModelID = null;


    function UpdateRestaffReason(caseID, reasonID) {

        $.ajax({
            type: 'POST',
            url: '/Patients/SetRestaffReasonValue',
            data: {
                caseID: caseID,
                reasonID: reasonID
            },
            success: function() {
                App.Popup.Hide();
            }
        });

    }

    function startDateSelected(caseID, newDate) {
        console.log('startDateSelected (' + caseid + "|" + newDate + ")");
    }

    function OnCellDblClick(visibleIndex, fieldName) {
                
        console.log('celldblclick: ' + fieldName);

        switch (fieldName) {
            case "RestaffingReasonDisplay":
                updateRestaffReason(visibleIndex);
                break;
            default:
                return;
        }


        function updateRestaffReason(visibleIndex) {

            var ctl = App.DevEx.GetControl("gridList");
            var id = ctl.GetRowKey(visibleIndex);

            App.Popup.Show({

                url: '/Patients/SetRestaffReason',
                type: 'GET',
                data: {
                    id: id
                },
                options: {
                    width: 300,
                    height: 75,
                    title: 'Restaff Reason',
                    allowDrag: true,
                    allowResize: false
                },
                opened: function() {
                },
                finished: function (r) {
                    if (r == 'cancelled') {
                        return;
                    } else {                        
                        App.DevEx.GetControl("gridList").Refresh();                                     
                    }
                },
                error: function (r) {
                    App.Errors.ShowGeneral();
                }

            });

        }
        
    }

    function OnCellClick(visibleIndex, fieldName) {

        switch (fieldName) {
            case "NeedsRestaffing":
                toggleNeedsRestaffing(visibleIndex);
                break;
            default:
                return;
        }


        function toggleNeedsRestaffing(visibleIndex) {

            var ctl = App.DevEx.GetControl("gridList");
            App.LoadingPanel.AutoPanel.SupressSingle();

            var caseID = ctl.GetRowKey(visibleIndex);
            
            App.LoadingPanel.AutoPanel.SupressSingle();
            $.ajax({
                type: 'POST',
                url: "/Patients/GridQuickEditCheckboxUpdate",
                data: {
                    caseID: caseID,
                    field: "needsRestaffing",
                    newValue: false
                },
                success: function() {
                    ctl.Refresh();
                }
            });
        }
        
    }



    function rowDblClick(s, e) {

        s.GetRowValues(e.visibleIndex, "ID", function (value) {
            var id = value;

            $.ajax({
                type: 'GET',
                url: '@Url.Action("Manage", "Case")',
                data: { caseID: id },
                success: function (response) {
                    $("#" + App.Content.ContentElementID).empty().append(response);
                },
                error: function() {
                    App.Dialogs.Error("We're sorry, we ran into a problem with that request.");
                }
            });

        });

    }

    function DialogConfirmClosed() {
        if (DialogConfirmResult == 'button1') {

            $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "Patients")',
                data: { id: activeModelID },
                success: function (response) {
                    $("#" + App.Content.ContentElementID).empty().append(response);
                    App.Dialogs.MessageBox("Patient deleted successfully.", App.Dialogs.Icons.Ok, "Success");
                },
                error: function (response) {
                    App.Dialogs.Error("We're sorry, we ran into a problem with that request.");
                }
            });
        }
    }

    function actionMenuItemClick(s, e) {

        var id = s.name.replace('pmActions', '');
        var action = e.item.name;

        switch (action) {


            case "Discharge" :

                performDischarge(id);

                break;

            case "CaseManager":

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("Manage", "Case")',
                    data: { caseID: id },
                    success: function (response) {
                        $("#" + App.Content.ContentElementID).empty().append(response);
                    },
                    error: function() {
                        App.Dialogs.Error();
                    }

                });

                break;

            case "Edit":

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("Edit", "Patients")',
                    data: { id: id },
                    success: function (response) {
                        $("#" + App.Content.ContentElementID).empty().append(response);
                    },
                    error: function (response) {
                        App.Dialogs.Error();
                    }
                });

                break;
            case "Delete":

                var msg = "Are you sure you want to delete this patient?";

                $.ajax({
                    type: 'GET',
                    url: '/Dialogs/ConfirmDelete',
                    data: { contentElementID: App.Content.ContentElementID, message: msg },
                    success: function (r) {
                        $("#DialogAnchor").html(r);
                        activeModelID = id;
                        DialogConfirm.Show();
                    },
                    error: function() {
                        App.Dialogs.Error();
                    }

                });


                break;
            default:
                App.Dialogs.Error("Action not recognized. Please contact your administator.");
        }

    }



    
    function performDischarge(caseID) {
        
        App.Popup.Show({
            url: "/Case/CaseDischarge",
            data: { caseID: caseID },
            options: {
                width: 500,
                height: 300,
                title: "Discharge"
            },
            finished: function(r) {
                if (r.substring(0, 4) == "ERR:") {
                    App.Dialogs.Error(r.substring(5));
                } else {
                    if (r == 'ok') {
                        loadPatientSearch();
                    }
                }
            },
            error: function() {
                App.Dialogs.Error("We're sorry, we seem to have encountered an error with that request.");
            }
        })

    }


    function loadPatientSearch() {

        $.ajax({
            url: '/Patients/Search',
            success: function(r) {
                $("#" + App.Content.ContentElementID).empty().append(r);
            },
            error: function() {
                App.Dialogs.Error("Sorry, we can't seem to load this page.  The discharge was successful.");
            }
        })

    }


</script>

<div id="grid-list">@Html.Partial("ListGrid", Model)</div>

<div id="DialogAnchor"></div>

<script type="text/javascript">
    $(function() {
        App.NavBar.InitView(@Html.Raw(Json.Encode(Model.Base)));
    });
</script>